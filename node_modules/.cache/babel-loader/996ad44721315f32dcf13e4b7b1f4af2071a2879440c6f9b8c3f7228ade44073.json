{"ast":null,"code":"import _slicedToArray from\"C:/Users/coolk/OneDrive/Documents/Coding Bootcamp/Homework/React-Portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{Link,useLocation}from'react-router-dom';import\"../styles/Navbar.css\";import MenuIcon from'@mui/icons-material/Menu';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Navbar(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),expandNavbar=_useState2[0],setExpandNavbar=_useState2[1];// this will make the navbar close when you select a link\nvar location=useLocation();useEffect(function(){setExpandNavbar(false);},[location]);return/*#__PURE__*/ (//    id checks if(?) navbar is open, if not then(:) it will be closed\n_jsxs(\"div\",{className:\"navbar\",id:expandNavbar?\"open\":\"close\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"toggleButton\",children:/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){setExpandNavbar(function(prev){return!prev;});},children:/*#__PURE__*/_jsx(MenuIcon,{})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"links\",children:[/*#__PURE__*/_jsx(Link,{to:\"/projects\",children:\" Projects \"}),/*#__PURE__*/_jsx(Link,{to:\"/about\",children:\" About \"}),/*#__PURE__*/_jsx(Link,{to:\"/contact\",children:\" Contact \"})]})]}));}export default Navbar;","map":{"version":3,"names":["React","useEffect","useState","Link","useLocation","MenuIcon","jsx","_jsx","jsxs","_jsxs","Navbar","_useState","_useState2","_slicedToArray","expandNavbar","setExpandNavbar","location","className","id","children","onClick","prev","to"],"sources":["C:/Users/coolk/OneDrive/Documents/Coding Bootcamp/Homework/React-Portfolio/src/components/Navbar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport \"../styles/Navbar.css\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nfunction Navbar() {\r\n    const [expandNavbar, setExpandNavbar] = useState(false);\r\n\r\n    // this will make the navbar close when you select a link\r\n    const location = useLocation();\r\n    useEffect(() => {\r\n        setExpandNavbar(false);\r\n    }, [location]);\r\n\r\n    return (\r\n        //    id checks if(?) navbar is open, if not then(:) it will be closed\r\n        <div className='navbar' id={expandNavbar ? \"open\" : \"close\"}>\r\n            <div className='toggleButton'>\r\n\r\n                {/* onClick sets if navbar is previously true then false or vice versa */}\r\n                <button onClick={() => { setExpandNavbar((prev) => !prev) }}>\r\n                    <MenuIcon />\r\n                </button>\r\n            </div>\r\n            <div className='links'>\r\n\r\n                <Link to=\"/projects\"> Projects </Link>\r\n                <Link to=\"/about\"> About </Link>\r\n                <Link to=\"/contact\"> Contact </Link>\r\n                {/* <Link to=\"/resume\"> Resume </Link> */}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar"],"mappings":"gKAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,IAAI,CAAEC,WAAW,KAAQ,kBAAkB,CACpD,MAAO,sBAAsB,CAC7B,MAAO,CAAAC,QAAQ,KAAM,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEhD,QAAS,CAAAC,MAAMA,CAAA,CAAG,CACd,IAAAC,SAAA,CAAwCT,QAAQ,CAAC,KAAK,CAAC,CAAAU,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAhDG,YAAY,CAAAF,UAAA,IAAEG,eAAe,CAAAH,UAAA,IAEpC;AACA,GAAM,CAAAI,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAC9BH,SAAS,CAAC,UAAM,CACZc,eAAe,CAAC,KAAK,CAAC,CAC1B,CAAC,CAAE,CAACC,QAAQ,CAAC,CAAC,CAEd,oBACI;AACAP,KAAA,QAAKQ,SAAS,CAAC,QAAQ,CAACC,EAAE,CAAEJ,YAAY,CAAG,MAAM,CAAG,OAAQ,CAAAK,QAAA,eACxDZ,IAAA,QAAKU,SAAS,CAAC,cAAc,CAAAE,QAAA,cAGzBZ,IAAA,WAAQa,OAAO,CAAE,SAAAA,QAAA,CAAM,CAAEL,eAAe,CAAC,SAACM,IAAI,QAAK,CAACA,IAAI,GAAC,CAAC,CAAE,CAAAF,QAAA,cACxDZ,IAAA,CAACF,QAAQ,GAAE,CAAC,CACR,CAAC,CACR,CAAC,cACNI,KAAA,QAAKQ,SAAS,CAAC,OAAO,CAAAE,QAAA,eAElBZ,IAAA,CAACJ,IAAI,EAACmB,EAAE,CAAC,WAAW,CAAAH,QAAA,CAAC,YAAU,CAAM,CAAC,cACtCZ,IAAA,CAACJ,IAAI,EAACmB,EAAE,CAAC,QAAQ,CAAAH,QAAA,CAAC,SAAO,CAAM,CAAC,cAChCZ,IAAA,CAACJ,IAAI,EAACmB,EAAE,CAAC,UAAU,CAAAH,QAAA,CAAC,WAAS,CAAM,CAAC,EAGnC,CAAC,EACL,CAAC,EAEd,CAEA,cAAe,CAAAT,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}